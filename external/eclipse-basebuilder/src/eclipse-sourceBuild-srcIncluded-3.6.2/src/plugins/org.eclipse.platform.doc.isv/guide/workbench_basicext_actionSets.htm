<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html lang="en">
<HEAD>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"></script>
<TITLE>org.eclipse.ui.actionSets</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H3>
org.eclipse.ui.actionSets</H3>

<P >
Your plug-in can contribute menus, menu items, and tool bar items to the workbench menus and toolbar
by using the
<a href="../reference/extension-points/org_eclipse_ui_actionSets.html"><b> org.eclipse.ui.actionSets</b></a> 
extension point. In order to reduce the clutter that would be caused by having every plug-in's menu contributions shown at once, the contributions are grouped into action sets which can be made visible by user preference.</P>
<P >
You can see which action sets have been contributed to your workbench by choosing

<a class="command-link" href='javascript:executeCommand("org.eclipse.ui.window.customizePerspective")'>
<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png">
<b>Window &gt; Customize Perspective...</b></a>

from the workbench menu. This option will show you a dialog that lists
action sets as groups of commands.  A checkmark by a command group means that the menu and tool bar actions are visible in the workbench. 
You can select the name of the command group to see the list of available menu and toolbar actions to the right. The figure below shows the
list of command groups available in our workbench.&nbsp; (Your workbench may look different depending on which plug-ins you have
installed and which perspective is active.)</P>

<img src="images/actionsets.png" alt="Customize Perspective dialog with action set list" border="0">


<P >
The readme tool uses an action set to contribute several different &quot;Open Readme
Browser&quot; actions to the workbench menu.&nbsp; (We contributed a similar
action to the popup menu of the resource navigator.)&nbsp; The markup follows:</P>
<pre>
&lt;extension point = &quot;org.eclipse.ui.actionSets&quot;&gt;
	   &lt;actionSet id=&quot;org_eclipse_ui_examples_readmetool_actionSet&quot;
		   label=&quot;%ActionSet.name&quot;
		   visible=&quot;true&quot;&gt;
		   &lt;menu id=&quot;org_eclipse_ui_examples_readmetool&quot;
			   label=&quot;%ActionSet.menu&quot;
			   path=&quot;window/additions&quot;&gt; 
			   &lt;separator name=&quot;slot1&quot;/&gt;
			   &lt;separator name=&quot;slot2&quot;/&gt;
			   &lt;separator name=&quot;slot3&quot;/&gt;
		   &lt;/menu&gt;
		   &lt;action id=&quot;org.eclipse.ui.examples.readmetool.readmeAction&quot;
			   menubarPath=&quot;window/org_eclipse_ui_examples_readmetool/slot1&quot;
			   toolbarPath=&quot;readme&quot;
			   label=&quot;%ReadmeAction.label&quot;
			   tooltip=&quot;%ReadmeAction.tooltip&quot;
			   helpContextId=&quot;org.eclipse.ui.examples.readmetool.open_browser_action_context&quot;
			   icon=&quot;icons/ctool16/openbrwsr.png&quot;
			   class=&quot;org.eclipse.ui.examples.readmetool.<b>WindowActionDelegate</b>&quot;
			   definitionId=&quot;org.eclipse.ui.examples.readmetool.readmeAction&quot;
			   enablesFor=&quot;1&quot;&gt;
			   &lt;selection class=&quot;org.eclipse.core.resources.IFile&quot;
					name=&quot;*.readme&quot;&gt;
			   &lt;/selection&gt;
		   &lt;/action&gt;
		   ...
	   &lt;/actionSet&gt;
   &lt;/extension&gt;</pre>
<P >
Wow, there's a lot going on here!&nbsp; Let's take it a step at a time, looking
only at the first action for now.&nbsp;&nbsp;</P>
<P >
First, the action set is declared and given a <b>label</b>.&nbsp;
The label &quot;ReadMe Actions&quot; (defined for <b> %ActionSet.name</b>  key in the plug-in's
properties file) is used to display the action set in the
dialog shown above.&nbsp; Since we set <b> visible</b> to true, the workbench will initially have the action set
checked in the action set list and the actions will be visible.</P>
<P >
The rest of the action set declaration is concerned with defining the menu in
which the actions appears and the actions themselves.</P>
<P >
We define a menu whose <b>label</b> appears in the workbench menus.&nbsp; The menu's <b>path</b>
tells the workbench to place the new menu in the <b>additions</b>
slot of the <b>window</b> menu.&nbsp; (For a discussion
of menu paths and slots, see <a HREF="workbench_menupaths.htm" CLASS="XRef"> Menu and toolbar paths</a>.)&nbsp;
We also define some slots in our new menu so that actions can be inserted at specific locations in our menu.</P>
<P >
This markup alone is enough to cause the menu to appear in the workbench <b>Window</b>
menu.</P>
<P >
<img src="images/readmeactionset.png" alt="Workbench Window menu with Readme File Editor entry" border="0" ></P>
<P >
Next, we define the actions themselves.&nbsp;&nbsp;</P>
<P >
The action definition (<b>id</b>,
<b>label</b>, <b>icon</b>, <b>class</b>) is
similar to the other actions we've seen in views, editors, and popups.&nbsp;
We'll focus here on what's different:&nbsp; where does the action go?&nbsp; We
use&nbsp; <b>menubarPath</b> and <b>toolbarPath</b>
to indicate its location.&nbsp; First, we define the <b>menubarPath</b> to add the
action to a slot in the menu
that we just defined (&nbsp;<b>&quot;window/org_eclipse_ui_examples_readmetool/slot1&quot;</b>).</P>
<P >
<img src="images/readmeactionsetmenu.png" alt="Readme File Editor menu with menu items" border="0" ></P>
<P >
Then, we define a new <b> toolbarPath</b> to insert our actions in the workbench tool
bar.&nbsp; Since we've defined a new tool path, <b>&quot;readme&quot;</b>, the workbench will decide where it goes
relative to other plug-in's toolbar contributions.</P>
<P >
<img src="images/readmeactionsettoolbar.png" alt="Workbench tool bar with readme action" border="0" ></P>
<P >
What happens when the action is selected by the user?&nbsp; The action is
implemented by the class specified in the <b>class</b>
attribute.&nbsp; The action <b> class</b> must implement
<b><a href="../reference/api/org/eclipse/ui/IWorkbenchWindowActionDelegate.html"> IWorkbenchWindowActionDelegate</a></b>,
or
<b><a href="../reference/api/org/eclipse/ui/IWorkbenchWindowPulldownDelegate.html"> IWorkbenchWindowPulldownDelegate</a></b> 
if the action will be shown as a pull-down tool item in the tool bar.&nbsp; Since we are not
creating a pull-down tool item, we provide <b>WindowActionDelegate</b>.&nbsp;
This class is similar to <b>ObjectActionDelegate</b>.&nbsp;
It launches the readme sections dialog when the user chooses the action.&nbsp; (We'll
discuss the sections dialog in <a href="dialogs_applications.htm">Application
dialogs</a>.)</P>


<P >
The action also supplies enabling conditions for its menu item and tool bar
item.&nbsp; The menu and tool bar items will only be enabled when a single (<b>enablesFor=&quot;1&quot;</b>)
readme file (<b>selectionClass =&quot;org.eclipse.core.resources.IFile&quot;
name=&quot;*.readme&quot;</b>) is selected.&nbsp; This action's menu and toolbar
item appear and are enabled by virtue of the markup
in the <b>plugin.xml</b> file.&nbsp; None of the
plug-in code will execute until the user chooses the action and the workbench
runs the action <b>class</b>.</P>

<p>The <b>definitionId</b> allows the action to be linked to a command created by the
<b><a href="../reference/extension-points/org_eclipse_ui_commands.html">org.eclipse.ui.commands</a></b>
extension, which can be used for keybindings.  All <b>actions</b> in an <b>actionSets</b>
should be linked to a command, either existing commands provided by the workbench or
commands created by the contributing plugin. 
See <a href="wrkAdv_keyBindings_actionDef.htm" class="XRef">Associating actions to commands</a>
and <a href="workbench_cmd_commands.htm" class="XRef">org.eclipse.ui.commands</a> for
defining commands.</p>

<P >
We'll look at the other two actions later in the context of <a href="wrkAdv_retarget_contribute.htm">retargetable
actions</a>.</P>





</BODY>
</HTML>
