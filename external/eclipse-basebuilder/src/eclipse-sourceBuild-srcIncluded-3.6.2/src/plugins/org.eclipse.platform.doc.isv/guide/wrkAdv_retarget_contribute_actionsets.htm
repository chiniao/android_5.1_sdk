<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html lang="en">
<HEAD>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Retargetable action set actions
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h4>Retargetable action set actions</h4>
<p>The <a href="../samples/org.eclipse.ui.examples.readmetool/doc-html/ui_readmetool_ex.html">readme
tool</a> action set also defines retargetable actions.&nbsp; The action remains
visible as long as the readme action set is visible, but it is only enabled when
a view or editor that implements the action is active.&nbsp; When using action
sets to define retargetable actions, the actions are created in the action set
markup rather than in code.&nbsp; The following is from the readme tool's action
set definition:</p>
<pre>&lt;extension point = &quot;org.eclipse.ui.actionSets&quot;&gt;
	   &lt;actionSet id=&quot;org_eclipse_ui_examples_readmetool_actionSet&quot;
		   label=&quot;%ActionSet.name&quot;
		   visible=&quot;true&quot;&gt;
...
&lt;action id=&quot;org_eclipse_ui_examples_readmetool_readmeRetargetAction&quot;
   menubarPath=&quot;window/org_eclipse_ui_examples_readmetool/slot1&quot;
   toolbarPath=&quot;readme&quot;
   label=&quot;%ReadmeRetargetAction.label&quot;
   tooltip=&quot;%ReadmeRetargetAction.tooltip&quot;
   helpContextId=&quot;org.eclipse.ui.examples.readmetool.open_browser_action_context&quot;
   icon=&quot;icons/ctool16/openbrwsr.png&quot;
   <b>retarget=&quot;true&quot;</b>&gt;
&lt;/action&gt;
&lt;action id=&quot;org_eclipse_ui_examples_readmetool_readmeRelabelRetargetAction&quot;
   menubarPath=&quot;window/org_eclipse_ui_examples_readmetool/slot1&quot;
   toolbarPath=&quot;readme&quot;
   label=&quot;%ReadmeRelabelRetargetAction.label&quot;
   tooltip=&quot;%ReadmeRelabelRetargetAction.tooltip&quot;
   helpContextId=&quot;org.eclipse.ui.examples.readmetool.open_browser_action_context&quot;
   icon=&quot;icons/ctool16/openbrwsr.png&quot;
   <b>retarget=&quot;true&quot;	</b>
   <b>allowLabelUpdate=&quot;true&quot;</b>&gt;
&lt;/action&gt;
...</pre>
<p>Retargeted actions are specified by using the <b>retarget=&quot;true&quot;</b>
attribute.&nbsp; This will cause a <b><a href="../reference/api/org/eclipse/ui/actions/RetargetAction.html">RetargetAction</a></b>
to be created in the action set.&nbsp; Note that the retargetable actions do not specify an implementing
<b>class</b> since it is up to each view or editor in the plug-in to set up a
handler that implements each action.&nbsp; If the <b>allowLabelUpdate</b>  is
true, then a <b><a href="../reference/api/org/eclipse/ui/actions/LabelRetargetAction.html">LabelRetargetAction</a>
</b>will be created instead.</p>
<p>The retargeted actions will be visible in the window menu when the readme
action set is visible.&nbsp; However, they will not be enabled if the readme
tool's editor or outline view are not active.</p>
<p><img src="images/readmeactionsetmenu.png" alt="Readme File Editor menu with two grayed items and one enabled item" border="0"></p>
<p>&nbsp;</p>
<p>What do the editor and view have to do?&nbsp; Again, the client side is
similar to registering a handler for the workbench or an editor's retargetable
action.&nbsp; The action id specified in the markup must be used when
registering a global action handler.</p>
<p>The <b>ReadmeEditorActionBarContributor </b>takes care of this for the
editor.&nbsp; First, it defines the handlers for the actions.</p>
<pre>public ReadmeEditorActionBarContributor() {
	...
	handler4 = new EditorAction(MessageUtil.getString(&quot;Editor_Action4&quot;)); 
	handler5 = new EditorAction(MessageUtil.getString(&quot;Editor_Action5&quot;)); 
	handler5.setToolTipText(MessageUtil.getString(&quot;Readme_Editor_Action5&quot;));
	...
}</pre>
<p>The handlers are registered at the same time that the handlers for the editor
retargetable actions were registered.</p>
<pre>public void init(IActionBars bars, IWorkbenchPage page) {
	...
	bars.setGlobalActionHandler(IReadmeConstants.ACTION_SET_RETARGET4, handler4);
	bars.setGlobalActionHandler(IReadmeConstants.ACTION_SET_LABELRETARGET5, handler5);
	...
}</pre>
<p>Recall that action bar contributors are shared among different instances of
the same editor.&nbsp; This means the handlers must be notified if the active
editor for the <b>ReadmeEditorActionBarContributor </b>changes.</p>
<pre>public void setActiveEditor(IEditorPart editor) {
	...
	handler4.setActiveEditor(editor);
	handler5.setActiveEditor(editor);
	...
}</pre>
<p>That's it for the editor.&nbsp; We should see these actions enable when the
editor is activated.</p>
<p><img src="images/actionseteditorretargets.png" alt="Readme File Editor menu with actions enabled" border="0">&nbsp;</p>
<p>Note that the label for the first retargetable action (&quot;Editor Action
4&quot;) was not used since the action set XML markup did not set <b>allowLabelUpdate</b>.</p>
<p>The <b>ReadmeContentOutlinePage</b>
 defines its handlers in the same place it defined handlers for the editor's
retargetable actions:</p>
<pre>public void createControl(Composite parent) {
	...
	action = new OutlineAction(MessageUtil.getString(&quot;Outline_Action4&quot;)); 
	getSite().getActionBars().setGlobalActionHandler(
		IReadmeConstants.ACTION_SET_RETARGET4, 
		action);  
	action = new OutlineAction(MessageUtil.getString(&quot;Outline_Action5&quot;)); 
	action.setToolTipText(MessageUtil.getString(&quot;Readme_Outline_Action5&quot;)); 
	getSite().getActionBars().setGlobalActionHandler(
		IReadmeConstants.ACTION_SET_LABELRETARGET5, 
		action);  
}</pre>
<p>We should see its relabeled action when the content outliner is active.</p>
<p><img src="images/actionsetoutlineretargets.png" alt="Readme File Editor menu with renamed action" border="0"></p>
<h4>&nbsp;</h4>



</BODY>
</HTML>
