<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2010. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<script language="JavaScript" type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"></script>
<title>General Plug-in Development Preferences</title>
<link href="../../book.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>General Plug-in Development Preferences</h1>
<p>The  Plug-in Development preference page provides global settings that control:</p>
<ul>
  <li>The presentation of plug-in and feature labels in all PDE views, editors and dialogs </li>
  <li>The Automated Management of Dependencies workflow </li>
</ul>

<p><img src="../../images/preferences/plugin_development.png" alt="Main Preference Page" ></p>

<h2>Presentation Labels</h2>
<p>By default, whenever a plug-in or a feature is presented in the UI (i.e. in the outline view, Plug-ins view, editors, etc.), the label shows the plug-in or feature ID followed by the plug-in or feature version. </p>
<p>The <strong>Presentation Label</strong> preference is a global setting that allows you to show an alternate label for plug-ins and features composed of the (translated) name of the plug-in or feature followed by the plug-in or feature version.</p>

<h2>Automated Management of Dependencies</h2>
<p>With automated management of dependencies it is the user's responsibility to explicitly invoke the function that analyzes the plug-in code and generates the correct dependencies for the plug-in <em>MANIFEST.MF</em> file. Neglecting to update the manifests may result in class loading errors when testing the plug-in. </p>
<p>The <strong>Update stale manifest files prior to launching</strong> preference will have PDE check all the manifest files in your workspace and make necessary updates to the manifests prior to launching.  This option is off by default as it decreases launch performance.</p>

<h2>Exporting</h2>
<p>Export Wizard creates a build.xml file when a plug-in is being exported. If the <strong>Prompt before overwriting build.xml files when exporting</strong> preference is selected, the user is prompted for confirmation before overwriting this file. This preference is used to preserve any custom changes made by the user.</p>  

<h2>Source</h2>
<p>When <strong>Show source plug-ins</strong> preference is selected, the source plug-ins too are displayed on Plug-ins tab of Eclipse Application launch configuration and on plug-ins import wizard.</p>

<h2>Target Definitions</h2>
<p>If <strong>Prompt before deleting a target definition file</strong> is selected, you will be prompted before a target definition file is deleted when <strong>Remove</strong> is pressed on the <a href="target_platform.htm">Target Platform</a> preference page.</p>
<p>If <strong>Include all plug-ins from target in Java search</strong> is selected, all the plug-ins from the active target platform will be added to the Java search scope.  Adding plug-ins to the java search scope will allow the plug-in contents to show up when doing Java searches and using the Open Type Dialog.  When this option is on, if any plug-in is removed from Java search, the preference will be turned off.</p>  
</body>
</html>
